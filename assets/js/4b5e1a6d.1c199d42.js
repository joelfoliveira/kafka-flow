"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3635],{3905:(e,n,a)=>{a.d(n,{Zo:()=>c,kt:()=>u});var t=a(67294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),d=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},c=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=d(a),u=r,g=p["".concat(l,".").concat(u)]||p[u]||m[u]||s;return a?t.createElement(g,i(i({ref:n},c),{},{components:a})):t.createElement(g,i({ref:n},c))}));function u(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<s;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},2171:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var t=a(87462),r=(a(67294),a(3905));const s={sidebar_position:1},i="Middleware Introduction",o={unversionedId:"guides/middlewares/middlewares",id:"guides/middlewares/middlewares",title:"Middleware Introduction",description:"In this section, we will learn what Middlewares are and how to create them.",source:"@site/docs/guides/middlewares/middlewares.md",sourceDirName:"guides/middlewares",slug:"/guides/middlewares/",permalink:"/kafkaflow/docs/guides/middlewares/",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/guides/middlewares/middlewares.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Middlewares",permalink:"/kafkaflow/docs/category/middlewares"},next:{title:"Typed Handler Middleware",permalink:"/kafkaflow/docs/guides/middlewares/typed-handler-middleware"}},l={},d=[{value:"Use Cases",id:"use-cases",level:2},{value:"Built-in middlewares",id:"built-in-middlewares",level:2},{value:"When Consuming\u200b",id:"when-consuming",level:2},{value:"When Producing",id:"when-producing",level:2},{value:"Creating a middleware",id:"creating-a-middleware",level:2},{value:"Some middleware samples",id:"some-middleware-samples",level:3},{value:"Log messages and processing time",id:"log-messages-and-processing-time",level:4},{value:"Log any exception",id:"log-any-exception",level:4},{value:"Ignore messages",id:"ignore-messages",level:4},{value:"Transform messages",id:"transform-messages",level:4},{value:"Pause Consumer when an exception is raised",id:"pause-consumer-when-an-exception-is-raised",level:4}],c={toc:d};function m(e){let{components:n,...a}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"middleware-introduction"},"Middleware Introduction"),(0,r.kt)("p",null,"In this section, we will learn what Middlewares are and how to create them."),(0,r.kt)("p",null,"KafkaFlow is middleware-oriented. Messages are delivered to a middleware and then forwarded to another middleware, and so on. It's a middleware pipeline that will be invoked in sequence."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Middlewares are executed in the same order they are defined in the configuration.\nEvery product/consumer has its own Middlewares instances, so the instances are not shared between different consumers/producers, but when consuming, the instances are shared between the workers of the same consumer. ")),(0,r.kt)("p",null,"Middlewares are instantiated by the configured dependency injection container, so every dependency configured by your container can be delivered in the middleware constructor."),(0,r.kt)("h2",{id:"use-cases"},"Use Cases"),(0,r.kt)("p",null,"Middlewares can perform several jobs. As an example, Middlewares can be used to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Transform the messages, allowing them to apply serialization and compression. "),(0,r.kt)("li",{parentName:"ul"},"Log the messages"),(0,r.kt)("li",{parentName:"ul"},"Handle exceptions"),(0,r.kt)("li",{parentName:"ul"},"Apply retry policies (take a look into ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Farfetch/kafkaflow-retry-extensions"},"KafkaFlow Retry Extensions"),")"),(0,r.kt)("li",{parentName:"ul"},"Collect metrics"),(0,r.kt)("li",{parentName:"ul"},"etc. ")),(0,r.kt)("h2",{id:"built-in-middlewares"},"Built-in middlewares"),(0,r.kt)("p",null,"KafkaFlow provides the following middlewares out of the box:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"serializer-middleware"},"Serializer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"compressor-middleware"},"Compressor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"typed-handler-middleware"},"Typed Handler")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"batch-consume-middleware"},"Batch Consume")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"consumer-throttling-middleware"},"Consumer Throttling"))),(0,r.kt)("h2",{id:"when-consuming"},"When Consuming\u200b"),(0,r.kt)("p",null,"The message will be delivered as a byte array to the first middleware; you will choose the middlewares to process the messages (you will probably create a middleware to do it or use the ",(0,r.kt)("a",{parentName:"p",href:"typed-handler-middleware"},"Typed Handler"),"). The next message will only be processed after all configured middlewares execute for that consumer."),(0,r.kt)("h2",{id:"when-producing"},"When Producing"),(0,r.kt)("p",null,"The middlewares are called when the ",(0,r.kt)("inlineCode",{parentName:"p"},"Produce")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"PoduceAsync")," of the ",(0,r.kt)("inlineCode",{parentName:"p"},"IMessageProducer")," is called. After all the middlewares execute, the message will be published to Kafka."),(0,r.kt)("h2",{id:"creating-a-middleware"},"Creating a middleware"),(0,r.kt)("p",null,"You can create your own middlewares by implementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"IMessageMiddleware")," interface. You must implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"Invoke")," method, which receives two parameters: the ",(0,r.kt)("inlineCode",{parentName:"p"},"IMessageContext")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"MiddlewareDelegate"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"IMessageContext")," is an object that has the message, message metadata, and consumer/producer information. The ",(0,r.kt)("inlineCode",{parentName:"p"},"MiddlewareDelegate")," is an ",(0,r.kt)("inlineCode",{parentName:"p"},"async")," method that calls the next middleware, it receives an ",(0,r.kt)("inlineCode",{parentName:"p"},"IMessageContext")," parameter which is the context that will be passed to the next middleware."),(0,r.kt)("h3",{id:"some-middleware-samples"},"Some middleware samples"),(0,r.kt)("h4",{id:"log-messages-and-processing-time"},"Log messages and processing time"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'public class LoggingMiddleware : IMessageMiddleware\n{\n    private readonly ILogger log;\n\n    public LoggingMiddleware(ILogger log)\n    {\n        this.log = log ?? throw new ArgumentNullException(nameof(log));\n    }\n\n    public async Task Invoke(IMessageContext context, MiddlewareDelegate next)\n    {\n        this.log.Info("Kafka Message Received");\n\n        var sw = Stopwatch.StartNew();\n\n        await next(context).ConfigureAwait(false);\n\n        sw.Stop();\n\n        this.log.Info(\n            "Kafka Message processed",\n            () => new\n            {\n                MessageType = context.Message?.GetType().FullName,\n                ProcessingTime = sw.ElapsedMilliseconds\n            });\n    }\n}\n')),(0,r.kt)("h4",{id:"log-any-exception"},"Log any exception"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'public class ErrorHandlingMiddleware : IMessageMiddleware\n{\n    private readonly ILogger log;\n\n    public ErrorHandlingMiddleware(ILogger log)\n    {\n        this.log = log ?? throw new ArgumentNullException(nameof(log));\n    }\n\n    public async Task Invoke(IMessageContext context, MiddlewareDelegate next)\n    {\n        try\n        {\n            await next(context).ConfigureAwait(false);\n        }\n        catch(Exception ex)\n        {\n            this.log.Error("Error processing message", ex);\n        }\n    }\n}\n')),(0,r.kt)("h4",{id:"ignore-messages"},"Ignore messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public class IgnoreMessageMiddleware : IMessageMiddleware\n{\n    public Task Invoke(IMessageContext context, MiddlewareDelegate next)\n    {\n        return UnwantedMessage(context) ?\n            Task.CompletedTask :\n            next(context);\n    }\n\n    private bool UnwantedMessage(IMessageContext context)\n    {\n        ...\n    }\n}\n")),(0,r.kt)("h4",{id:"transform-messages"},"Transform messages"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This is only a sample, use the ",(0,r.kt)("a",{parentName:"p",href:"serializer-middleware"},"Serializer Middleware")," instead.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'public class JsonDeserializeMiddleware : IMessageMiddleware\n{\n    public Task Invoke(IMessageContext context, MiddlewareDelegate next)\n    {\n        if(!(context.Message is byte[] rawMessage))\n            throw new InvalidoperationException();\n\n        var type = Type.GetType(context.Headers.GetString("Message-Type"));\n\n        var jsonMessage = Encoding.UTF8.GetString(rawMessage);\n\n        context.TransformMessage(JsonConvert.Deserialize(jsonMessage, MessageType));\n\n        return next(context);\n    }\n}\n')),(0,r.kt)("h4",{id:"pause-consumer-when-an-exception-is-raised"},"Pause Consumer when an exception is raised"),(0,r.kt)("p",null,"Add the following middleware to the beginning of your Consumer middleware pipeline."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This middleware is part of a sample you can find ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Farfetch/kafkaflow/tree/master/samples/KafkaFlow.Sample.PauseConsumerOnError"},"here"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using KafkaFlow.Consumers;\n\npublic class PauseConsumerOnExceptionMiddleware : IMessageMiddleware\n{\n    private readonly IConsumerAccessor consumerAccessor;\n    private readonly ILogHandler logHandler;\n\n    public PauseConsumerOnExceptionMiddleware(IConsumerAccessor consumerAccessor, ILogHandler logHandler)\n    {\n        this.consumerAccessor = consumerAccessor;\n        this.logHandler = logHandler;\n    }\n\n    public async Task Invoke(IMessageContext context, MiddlewareDelegate next)\n    {\n        try\n        {\n            await next(context);\n        }\n        catch (Exception exception)\n        {\n            context.ConsumerContext.ShouldStoreOffset = false;\n            this.logHandler.Error("Error handling message", exception,\n                new\n                {\n                    context.Message,\n                    context.ConsumerContext.Topic,\n                    MessageKey = context.Message.Key,\n                    context.ConsumerContext.ConsumerName,\n                });\n\n            var consumer = this.consumerAccessor[context.ConsumerContext.ConsumerName];\n            consumer.Pause(consumer.Assignment);\n\n            this.logHandler.Warning("Consumer stopped", context.ConsumerContext.ConsumerName);\n        }\n    }\n}\n')))}m.isMDXComponent=!0}}]);